package edu.tongji.dao;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import edu.tongji.model.Rating;
import edu.tongji.util.StringUtil;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class RatingDAOImpl extends SqlMapClientDaoSupport implements RatingDAO {

    /** 查询补足评分记录 */
    private final static String EXCUTE_SELECT_COMPLEMENT_RATING = "excute_select_complement_rating";

    /** 查询将会丢失评分的集合*/
    private final static String EXCUTE_SELECT_MISSING_RATING    = "excute_select_missing_rating";
    
    /** 查询将会丢失评分的集合*/
    private final static String EXCUTE_SELECT_GENERAL_RATING    = "excute_select_general_rating";
    

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rating
     *
     * @abatorgenerated Tue Sep 10 11:05:22 CST 2013
     */
    public RatingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rating
     *
     * @abatorgenerated Tue Sep 10 11:05:22 CST 2013
     */
    public String insert(Rating record) {
        Object newKey = getSqlMapClientTemplate().insert("rating.abatorgenerated_insert", record);
        return (String) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rating
     *
     * @abatorgenerated Tue Sep 10 11:05:22 CST 2013
     */
    public int updateByPrimaryKey(Rating record) {
        int rows = getSqlMapClientTemplate().update("rating.abatorgenerated_updateByPrimaryKey",
            record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rating
     *
     * @abatorgenerated Tue Sep 10 11:05:22 CST 2013
     */
    public int updateByPrimaryKeySelective(Rating record) {
        int rows = getSqlMapClientTemplate().update(
            "rating.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /** 
     * @see edu.tongji.dao.RatingDAO#select(java.util.Map)
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    @Override
    public List<Rating> select(Map map) {
        List<Rating> ratings = getSqlMapClientTemplate().queryForList(
            "rating.excute_select_default", map);
        return ratings;
    }

    /** 
     * @see edu.tongji.dao.RatingDAO#select(java.lang.String, java.util.List)
     */
    @SuppressWarnings("unchecked")
    @Override
    public List<Rating> select(String type, List<String> param) {

        List<Rating> ratings = null;
        if (StringUtil.equalsIgnoreCase(type, EXCUTE_SELECT_COMPLEMENT_RATING)) {
            ratings = getSqlMapClientTemplate().queryForList(
                "rating.excute_select_complement_rating", param);
        } else if (StringUtil.equals(type, EXCUTE_SELECT_MISSING_RATING)) {
            ratings = getSqlMapClientTemplate().queryForList("rating.excute_select_missing_rating",
                param);
        }else if(StringUtil.equals(type, EXCUTE_SELECT_GENERAL_RATING)){
            Map<String, String> map = new HashMap<String, String>();
            map.put("start", param.get(0));
            map.put("end", param.get(1));
            map.put("first", param.get(2));
            map.put("second", param.get(3));
            ratings = getSqlMapClientTemplate().queryForList("rating.excute_select_general_rating",
                map);
        }
        return ratings;
    }

    /** 
     * @see edu.tongji.dao.RatingDAO#countTotalItems(int, int)
     */
    @Override
    public int countTotalItems(int itemI, int itemJ) {
        Map<String, String> map = new HashMap<String, String>();
        map.put("first", String.valueOf(itemI));
        map.put("second", String.valueOf(itemJ));
        return (int) getSqlMapClientTemplate().queryForObject("rating.count_total_item", map);
    }

    /** 
     * @see edu.tongji.dao.RatingDAO#countMissingItems(int, int)
     */
    @Override
    public int countMissingItems(int itemI, int itemJ) {
        List<String> list = new ArrayList<String>();
        list.add(String.valueOf(itemI));
        list.add(String.valueOf(itemJ));
        return (int) getSqlMapClientTemplate().queryForObject("rating.count_missing_item", list);
    }

}