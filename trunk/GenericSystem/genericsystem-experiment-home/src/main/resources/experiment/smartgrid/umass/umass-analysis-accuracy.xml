<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.5.xsd">

	<!-- Database -->
	<bean id="datasource" class="edu.tongji.orm.SmartGridDataSource">
		<property name="sourceEntity">
			<util:map key-type="edu.tongji.parser.TemplateType">
				<!-- refrigerator | main | air_conditioning -->
				<entry key="REDD_SMART_GRID_TEMPLATE" value="${SMARTGRID_DATASET_READ_PATH}" />
			</util:map>
		</property>
	</bean>

	<!-- Entity Manager -->
	<bean id="engine" class="edu.tongji.engine.smartgrid.AnalysisAccuracyEngine">
		<property name="dataSource" ref="datasource" />
		<property name="ROUND" value="${ROUND}" />
		<!-- hourSeqDataSetAssembler | quarterSeqDataSetAssembler | wattQuarterSeqDataSetAssembler -->
		<property name="assembler" ref="wattQuarterSeqDataSetAssembler" />
		<!-- relativeAccuracyExpectationCracker | meanAbsoluteErrorSeqDayCracker 
			| standardExpectationCracker | bayesianNetworksCracker | bayesianNetWorksWithEMCracker -->
		<property name="cracker" ref="bayesianNetWorksWithEMCracker" />
		<!-- uniformNoise | normalDistri | gaussMixtureNoise -->
		<property name="noise" ref="gaussMixtureNoise" />
		<!-- seqQuarterHKCallBack -->
		<!--<property name="hashKyGen" ref="seqQuarterHKCallBack" /> -->
	</bean>

	<!-- Crackers -->
	<bean id="standardExpectationCracker" class="edu.tongji.crack.StandardExpectationCracker" />
	<bean id="relativeAccuracyExpectationCracker" class="edu.tongji.crack.RelativeAccuracyExpectationCracker" />
	<bean id="meanAbsoluteErrorSeqDayCracker" class="edu.tongji.crack.MeanAbsoluteErrorSeqDayCracker" />
	<bean id="expectationSeqDayCracker" class="edu.tongji.crack.ExpectationSeqDayCracker" />
	<bean id="linearExpectationCracker" class="edu.tongji.crack.LinearExpectationCracker">
		<property name="statisticianFactory" ref="statisticianFactory" />
	</bean>
	<bean id="bayesianNetworksCracker" class="edu.tongji.crack.BayesianNetworksCracker" />
	<bean id="bayesianNetWorksWithEMCracker" class="edu.tongji.crack.BayesianNetWorksWithEMCracker">
		<property name="noise" ref="gaussMixtureNoise" />
	</bean>

	<!-- CallBack -->
	<bean id="seqQuarterHKCallBack" class="edu.tongji.crack.support.SeqQuarterHKCallBack" />

	<!-- Statistics Entity -->
	<bean id="statisticianFactory" class="edu.tongji.extend.statistics.StatisticianFactory">
		<property name="reposity">
			<map>
				<entry key="mse" value-ref="mse" />
				<entry key="rmse" value-ref="rmse" />
			</map>
		</property>
	</bean>
	<bean id="mse" class="edu.tongji.extend.statistics.MSEStatistician" />
	<bean id="rmse" class="edu.tongji.extend.statistics.RMSEStatistician" />

	<!-- Noise Entity -->
	<bean id="noiseParamSupport" class="edu.tongji.extend.support.NoiseParamSupport">
		<property name="n" value="${RESIDENTAL_POPULATION}" />
		<property name="w_0" value="${PARAM_MAIN_GASSIAN_COMPONENT_WEIGHT}" />

	</bean>
	<bean id="normalDistri" class="edu.tongji.extend.noise.NormalNoise"
		lazy-init="true">
		<constructor-arg type="edu.tongji.extend.support.NoiseParamSupport"
			ref="noiseParamSupport" />
	</bean>
	<bean id="uniformNoise" class="edu.tongji.extend.noise.UniformNoise"
		lazy-init="true">
		<constructor-arg type="edu.tongji.extend.support.NoiseParamSupport"
			ref="noiseParamSupport" />
	</bean>
	<bean id="gaussMixtureNoise" class="edu.tongji.extend.noise.GaussMixtureNoise"
		lazy-init="true">
		<constructor-arg type="edu.tongji.extend.support.NoiseParamSupport"
			ref="noiseParamSupport" />
	</bean>



	<!-- Assembler -->
	<bean id="quarterSeqDataSetAssembler"
		class="edu.tongji.engine.smartgrid.support.QuarterSeqDataSetAssembler" />
	<bean id="hourSeqDataSetAssembler"
		class="edu.tongji.engine.smartgrid.support.HourSeqDataSetAssembler" />
	<bean id="wattQuarterSeqDataSetAssembler"
		class="edu.tongji.engine.smartgrid.support.WattQuarterSeqDataSetAssembler" />

	<!-- Cache -->
	<bean class="edu.tongji.cache.WeatherCache">
		<property name="source" value="${WEATHER_CACHE_PATH_WITH_RE}" />
	</bean>

	<!-- artificial intelligence -->
	<bean class="edu.tongji.ai.cluster.RuleBasedPRUtil">
		<property name="ruleThreshhold">
			<list>
				<value>28.0</value>
				<value>228.0</value>
				<value>128.0</value>
			</list>
		</property>
	</bean>

	<!-- ******************************************** 外接属性配置文件 ************************************************ -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:experiment/smartgrid/umass/z_smartgrid.properties
			</value>
		</property>
	</bean>
</beans>
